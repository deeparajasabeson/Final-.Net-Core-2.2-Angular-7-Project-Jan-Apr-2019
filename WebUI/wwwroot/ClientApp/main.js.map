{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Models/Cart.ts","webpack:///./src/app/Models/CartItem.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/services/cartService.ts","webpack:///./src/app/services/storeService.ts","webpack:///./src/app/store/store.component.html","webpack:///./src/app/store/store.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { CartItem } from './CartItem';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport class Cart {\r\n  CartId: number;\r\n  Items: any;\r\n  Total: number;\r\n  TotalItems: number;\r\n  UserId: number;\r\n  CreatedDate: string;\r\n  CartName: string;\r\n  constructor() {\r\n    this.CartName = environment.cartName;\r\n    this.Items = [];\r\n    this.TotalItems = 0;\r\n  }\r\n}\r\n","export class CartItem {\r\n  CartItemId: number;\r\n  Total: number;\r\n  constructor(\r\n    public ProductId: number,\r\n    public Name: string,\r\n    public UnitPrice: number,\r\n    public Quantity: number) { }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CartComponent } from './cart/cart.component';\r\nimport { StoreComponent } from './store/store.component';\r\n\nconst routes: Routes = [\n  { path: '', component: StoreComponent },\n  { path: 'cart', component: CartComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" asp-area=\\\"\\\" asp-controller=\\\"Home\\\" asp-action=\\\"Index\\\">Shopping Site</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\" aria-controls=\\\"navbarSupportedContent\\\"\\r\\n            aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"navbar-collapse collapse d-sm-inline-flex\\\">\\r\\n      <ul class=\\\"navbar-nav flex-grow-1\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <ul class=\\\"navbar-nav justify-content-end\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link text-dark btn btn-warning\\\" [routerLink]=\\\"['/cart']\\\" *ngIf=\\\"cart.Total > 0\\\"><b>In-Cart:{{ cart.TotalItems }} Item<span *ngIf=\\\"cart.TotalItems > 1\\\">s</span>,{{ cart.Total | currency: 'INR' }} </b></a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link text-dark\\\" href=\\\"/Account/SignUp\\\">Sign-Up</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link text-dark\\\" href=\\\"/Account/Login\\\">Login</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { CartService } from './services/cartService';\r\nimport { Cart } from './Models/Cart';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  cart: Cart;\r\n  constructor(private cartService: CartService) {\r\n    this.cart = cartService.getCart();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { StoreComponent } from './store/store.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { StoreService } from './services/storeService';\r\nimport { CartService } from './services/cartService';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    StoreComponent,\r\n    CartComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [StoreService, CartService, HttpClientModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h2>Cart Details</h2>\\r\\n<hr/>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-8\\\">\\r\\n    <div [hidden]=\\\"!cart.Items.length == 0\\\">\\r\\n      Your cart is empty!\\r\\n    </div>\\r\\n    <table class=\\\"table table-bordered\\\" *ngIf=\\\"cart.Items.length > 0\\\">\\r\\n      <tr>\\r\\n        <th>Item</th>\\r\\n        <th>Quantity</th>\\r\\n        <th>Price</th>\\r\\n        <th>Actions</th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let item of cart.Items\\\">\\r\\n        <td>{{ item.Name }}</td>\\r\\n        <td>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"item.Quantity\\\" style=\\\"width:60px\\\" /> &nbsp;\\r\\n            <button class=\\\"btn btn-success\\\" type=\\\"button\\\" [disabled]=\\\"item.Quantity < 1\\\" (click)=\\\"cartService.addToCart(item.ProductId, item.Name, item.UnitPrice, 1)\\\"> + </button>\\r\\n            &nbsp;\\r\\n            <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" [disabled]=\\\"item.Quantity <= 1\\\" (click)=\\\"cartService.addToCart(item.ProductId, item.Name, item.UnitPrice, -1)\\\"> - </button>\\r\\n            &nbsp;\\r\\n          </div>\\r\\n        </td>\\r\\n        <td>{{ item.UnitPrice * item.Quantity | currency: \\\"INR\\\" }}</td>\\r\\n        <td title=\\\"Remove from cart\\\">\\r\\n          <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"cartService.deleteFromCart(item.ProductId)\\\"> X </button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td></td>\\r\\n        <td><b>Grand Total</b></td>\\r\\n        <td><b>{{ cart.Total | currency: \\\"INR\\\" }}</b></td>\\r\\n        <td></td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <p>\\r\\n      <a class=\\\"btn btn-block btn-success\\\" [routerLink]=\\\"['/']\\\">Continue Shopping >></a>\\r\\n      <button class=\\\"btn btn-block btn-danger\\\" [disabled]=\\\"cart.Total < 1\\\" (click)=\\\"cartService.clearCart()\\\">Clear Cart</button>\\r\\n    </p>\\r\\n    <br /><br />\\r\\n    <p>\\r\\n      <button class=\\\"btn btn-block btn-primary\\\" [disabled]=\\\"cart.Total < 1\\\" (click)=\\\"checkout()\\\">Check out using PayUmoney</button>\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { CartService } from '../services/cartService';\r\nimport { Cart } from '../Models/Cart';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styles: []\r\n})\r\nexport class CartComponent implements OnInit {\r\n  cart: Cart;\r\n  constructor(public cartService: CartService) {\r\n    this.cart = cartService.getCart();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  checkout() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment as env } from 'src/environments/environment';\r\nimport { Cart } from '../Models/Cart';\r\nimport { CartItem } from '../Models/CartItem';\r\n\r\ndeclare const $: any;\r\ndeclare const CryptoJS: any;\r\ndeclare const localStorage: any;\r\n\r\n@Injectable()\r\nexport class CartService {\r\n  private cart: Cart;\r\n  constructor() {\r\n    this.cart = new Cart();\r\n  }\r\n\r\n  saveCart() {\r\n    if (localStorage != null) {\r\n      var data = JSON.stringify(this.cart.Items);\r\n      var encData = CryptoJS.AES.encrypt(data, env.encKey);\r\n      localStorage[this.cart.CartName] = encData;\r\n    }\r\n  }\r\n\r\n  getCart() {\r\n    if (localStorage != null && localStorage[this.cart.CartName] != undefined && localStorage[this.cart.CartName] != \"\") {\r\n      var encData = localStorage[this.cart.CartName];\r\n      var bytes = CryptoJS.AES.decrypt(encData.toString(), env.encKey);\r\n      var data = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n      this.cart.Items = JSON.parse(data);\r\n      this.calculateCart();\r\n    }\r\n    return this.cart;\r\n  }\r\n\r\n  clearCart() {\r\n    this.cart.Items = [];\r\n    this.cart.Total = 0;\r\n    if (localStorage != null) {\r\n      localStorage[this.cart.CartName] = '';\r\n    }\r\n    this.cart.TotalItems = 0;\r\n  }\r\n\r\n  calculateCart() {\r\n    let count = 0;\r\n    let price = 0;\r\n    for (let i = 0; i < this.cart.Items.length; i++) {\r\n      const item = this.cart.Items[i];\r\n      count += item.Quantity;\r\n      price += this.cart.Items[i].Total = item.Quantity * item.UnitPrice;\r\n    }\r\n    this.cart.TotalItems = count;\r\n    this.cart.Total = price;\r\n  }\r\n\r\n  addToCart(ProductId: number, Name: string, UnitPrice: number, Quantity: number) {\r\n    console.log(ProductId, Name, UnitPrice, Quantity);\r\n    if (Quantity != undefined) {\r\n      let found = false;\r\n      for (let i = 0; i < this.cart.Items.length && !found; i++) {\r\n        const item: CartItem = this.cart.Items[i];\r\n        if (item.ProductId === ProductId) {\r\n          found = true;\r\n          item.Quantity += Quantity;\r\n        }\r\n      }\r\n      if (!found) {\r\n        const item = new CartItem(ProductId, Name, UnitPrice, Quantity);\r\n        this.cart.Items.push(item);\r\n      }\r\n      this.calculateCart();\r\n      this.saveCart(); // save to localStorage\r\n    }\r\n  }\r\n\r\n  deleteFromCart(ProductId: number) {\r\n    for (let i = 0; i < this.cart.Items.length; i++) {\r\n      const item = this.cart.Items[i];\r\n      if (item.ProductId === ProductId) {\r\n        this.cart.Items.splice(i, 1);\r\n      }\r\n    }\r\n    this.calculateCart();\r\n    this.saveCart();\r\n  }\r\n\r\n  checkoutPayUmoney(user: any) {\r\n    const params = {\r\n      url: env.paymentGatewayUrl,\r\n      options: {\r\n        key: env.paymentGatewayKey,\r\n        salt: env.paymentGatewaySalt,\r\n        txnid: (Math.random() * 10000000000).toFixed(0), //with 10 numbers\r\n        amount: this.cart.Total,\r\n        productinfo: this.cart.CartName + '_' + this.cart.Total,\r\n        firstname: user.name,\r\n        email: user.username,\r\n        phone: user.contactNo,\r\n        surl: env.baseAddress + '/home/paymentstatus',\r\n        furl: env.baseAddress + '/home/paymentstatus',\r\n        service_provider: '',\r\n        hash: '',\r\n        udf1: this.cart.CartId,\r\n        udf2: user.userId\r\n      }\r\n    };\r\n\r\n    const str =\r\n      params.options.key + '|' +\r\n      params.options.txnid + '|' +\r\n      params.options.amount + '|' +\r\n      params.options.productinfo + '|' +\r\n      params.options.firstname + '|' +\r\n      params.options.email + '|' +\r\n      params.options.udf1 + '|' +\r\n      params.options.udf2 + '|||||||||' +\r\n      params.options.salt;\r\n    //console.log(str);\r\n\r\n    params.options.hash = CryptoJS.SHA512(str).toString();\r\n    //console.log(params.options.hash);\r\n    //build form\r\n    const form = $('<form></form>');\r\n    form.attr('action', params.url);\r\n    form.attr('method', 'POST');\r\n    form.attr('style', 'display:none;');\r\n    this.addFormFields(form, params.options);\r\n    $('body').append(form);\r\n\r\n    this.clearCart();\r\n    form.submit();\r\n    form.remove();\r\n  }\r\n\r\n  //adding hidden fields to form\r\n  addFormFields(form: any, data: any) {\r\n    if (data != null) {\r\n      $.each(data, function (Name: string, value: string) {\r\n        if (value != null) {\r\n          const input = $('<input></input>').attr('type', 'hidden').attr('Name', Name).val(value);\r\n          form.append(input);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpClientModule } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../Models/Product';\r\nimport { environment as env} from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StoreService {\r\n  httpHeaders: HttpHeaders;\r\n  constructor(private httpClient: HttpClient) {\r\n    this.httpHeaders = new HttpHeaders({ 'content-type': 'application/json' });\r\n  }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.httpClient.get<Product[]>(env.apiAddress + '/store/getproducts');\r\n  }\r\n\r\n  addCart(cart: any): Observable<any> {\r\n    return this.httpClient.post<any>(env.apiAddress + '/store/savecart', JSON.stringify(cart), {headers: this.httpHeaders });\r\n  }\r\n}\r\n","module.exports = \"<h2>My Store</h2>\\r\\n<hr/>\\r\\n<table class=\\\"table table-bordered\\\">\\r\\n  <tr>\\r\\n    <th>SNo.</th>\\r\\n    <th>Image</th>\\r\\n    <th>Description</th>\\r\\n    <th>Price</th>\\r\\n    <th>Actions</th>\\r\\n  </tr>\\r\\n  <tr *ngFor=\\\"let item of products; let i=index\\\">\\r\\n    <td>{{i+1}}</td>\\r\\n    <td>\\r\\n      <img [src]=\\\"item.imagePath\\\" [alt]=\\\"item.name\\\" height=\\\"200\\\" width=\\\"300\\\" />\\r\\n    </td>\\r\\n    <td>{{item.description}}</td>\\r\\n    <td>{{item.unitPrice}}</td>\\r\\n    <td>\\r\\n      <button type=\\\"button\\\" (click)=\\\"cartService.addToCart(item.productId, item.name, item.unitPrice, 1)\\\" class=\\\"btn btn-primary\\\">Add</button>\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Product } from '../Models/Product';\r\nimport { StoreService } from '../services/storeService';\r\nimport { CartService } from '../services/cartService';\r\n\r\n@Component({\r\n  selector: 'app-store',\r\n  templateUrl: './store.component.html',\r\n  styles: []\r\n})\r\nexport class StoreComponent implements OnInit {\r\n\r\n  products: Product[];\r\n  constructor(private storeService: StoreService, public cartService: CartService) { }\r\n\r\n  ngOnInit() {\r\n    this.storeService.getProducts().subscribe((res) => {\r\n      this.products = res;\r\n    })\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiAddress: 'https://localhost:44384/api',\n  baseAddress: 'http://localhost:1200',\n  cartName: 'mycart',\n  encKey: 'mysecretkey',\n  paymentGatewayUrl: 'https://test.payu.in/_payment',\n  paymentGatewayKey: 'gtKFFx',\n  paymentGatewaySalt: 'eCwWELxi'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}